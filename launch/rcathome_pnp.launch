<launch>

<arg name="robot_name" default="diago" />
<arg name="plan_folder" value="$(find robocupathome_pnp)/plans" />
<arg name="PNPGUI" default="false" />

<group ns="$(arg robot_name)">

    <param name="robot_name" value="$(arg robot_name)" />

    <node pkg="pnp_ros" type="pnp_node" name="pnp" args="" output="screen">
        <param name="plan_folder" value="$(arg plan_folder)" />
        <param name="current_plan" value="stop" />
        <param name="use_java_connection" value="$(arg PNPGUI)" />
    </node>

    <node pkg="robocupathome_pnp" type="rcathome_pnpas" name="robocupathome_pnpas" args="" output="screen">      
    </node>

    <node pkg="tcp_interface" type="tcp_interface" name="tcp_interface" args="" output="screen">
        <param name="TCP_server_port" value="9000"/>
        <param name="UDP_server_port" value="9100"/>
        <param name="network_interface" value="wlan0"/>
        <param name="UDP_team_min_port" value="9100"/>
        <param name="UDP_team_max_port" value="9110"/>
        <param name="config_file" value="$(find tcp_interface)/config/UDPpeers.cfg"/>    
    </node>

    <!-- CONDITIONS -->

    <!-- provide data for persondetected and personhere conditions -->
    <node pkg="laser_analysis" name="laserobstacle" type="laserobstacle" args=""  output="screen">
	    <param name="laser_frame_id" value="/$(arg robot_name)/laser_frame" />
	    <param name="map_distance" value="0.5" />
        <param name="obstacle_margin_x_min" value="0" />
        <param name="obstacle_margin_x_max" value="6" />
        <param name="obstacle_margin_y_min" value="-1" />
        <param name="obstacle_margin_y_max" value="1" />
    </node>

    <!-- ACTIONS -->

    <node pkg="rococo_navigation" name="turn" type="turn_node" args="-server $(arg robot_name)"  output="screen">
	</node>

    <node pkg="rococo_navigation" name="follow_corridor" type="follow_corridor_node" args="-server $(arg robot_name)"  output="screen">
	</node>

	  
	<node pkg="rococo_navigation" name="follow_person" type="follow_person_node" args="-server $(arg robot_name)"  output="screen">
	</node>


</group><!-- ns -->

</launch>

